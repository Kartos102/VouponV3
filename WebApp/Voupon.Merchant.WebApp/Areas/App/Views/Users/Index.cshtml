@model List<Voupon.Database.Postgres.RewardsEntities.Users>;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/App/Views/Shared/_Layout.cshtml";
}



<div class="dashboard-main-wrapper">
    <div class="dashboard-ecommerce">
        <div class="container-fluid dashboard-content ">
            <div class="page-header-container col-lg-12 d-flex justify-content-between align-items-center mb-2">
                <h1>Users</h1>
                <div class="row float-right" style="margin:3px;margin-bottom:10px">
                    <a href="#" class="btn btn-primary" id="btnAddUserModal">+ Add User</a>
                </div>
            </div>
            <div class="row users-table-card col-lg-12 col-md-12">
                <div class="col-12 row search-row">
                    <div class="input-group col-md-10 col-xl-10 col-lg-10 col-sm-12 col-12">
                        <input class="form-control py-2 border-right-0 border" type="search" value="" placeholder="search..." id="user-search-input">
                        <span class="input-group-append">
                            <button class="btn btn-outline-secondary border-left-0 border" type="button" id="user-search-btn">
                                <i class="fa fa-search" aria-hidden="true"></i>
                            </button>
                        </span>
                    </div>
                </div>
                @{
                    int index = 1;
                    foreach (var item in Model.OrderBy(x => x.CreatedAt))
                    {
                        if (index > 1)
                        {
                            <hr />
                        }
                        <div class="row card-table-row card-table-tamplate">
                            <div class="mobile-card-row row col-12 col-md-8 col-sm-12">
                                <div class="row col-12">
                                    <div class="col-6 card-title-row">
                                        No:
                                    </div>
                                    <div class="col-6 card-record-row user-order">
                                        @index
                                    </div>
                                </div>
                                <div class="row col-12">
                                    <div class="col-6 card-title-row">
                                        Email:
                                    </div>
                                    <div class="col-6 card-record-row user-email">
                                        @item.UserName
                                    </div>
                                </div>
                                <div class="row col-12">
                                    <div class="col-6 card-title-row">
                                        Role:
                                    </div>
                                    <div class="col-6 card-record-row user-role">
                                        @{
                                            @(item.UserRoles != null ? (item.UserRoles.FirstOrDefault() != null ? item.UserRoles.FirstOrDefault().Role.Name : "-") : "-")
                                        }
                                    </div>
                                </div>
                                <div class="row col-12">
                                    <div class="col-6 card-title-row">
                                        Created At:
                                    </div>
                                    <div class="col-6 card-record-row user-createdAt">
                                        @item.CreatedAt.ToString("dd/MM/yyyy")
                                    </div>
                                </div>
                                <div class="row col-12">
                                    <div class="col-6 card-title-row">
                                        Action:
                                    </div>
                                    <div class="col-6 card-record-row user-action">
                                        <a class="btn-edit" user-id="@item.Id" href="javascript:return false;">Edit</a>
                                        <br />
                                        <a class="btn-change-password" user-id="@item.Id" href="javascript:return false;">Change Password</a>
                                    </div>
                                </div>

                            </div>
                        </div>
                        index++;
                    }
                }
            </div>


            <div class="table-responsive-lg users-table">
                <table id="dtUsers" class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col" style="text-align: center;">No</th>
                            @*<th scope="col" style="text-align: center;">User ID</th>*@
                            <th scope="col" style="text-align: center;">Email</th>
                            @*<th scope="col" style="text-align: center;">Merchant</th>*@
                            <th scope="col" style="text-align: center;">Roles</th>
                            <th scope="col" style="text-align: center;">Created At</th>
                            <th scope="col" style="text-align: center;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 1;
                            foreach (var item in Model)
                            {
                                <tr>
                                    <th scope="row">@i</th>
                                    @*<td>@item.Id</td>*@
                                    <td>@item.UserName</td>
                                    @*<td>@(item.UserClaims.FirstOrDefault(x => x.ClaimType == "MerchantId") != null ? item.UserClaims.FirstOrDefault(x => x.ClaimType == "MerchantId").ClaimValue : "-")</td>*@
                                    <td>@(item.UserRoles != null ? (item.UserRoles.FirstOrDefault() != null ? item.UserRoles.FirstOrDefault().Role.Name : "-") : "-")</td>
                                    <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        <a class="btn-edit" user-id="@item.Id" href="javascript:return false;">Edit</a>&nbsp;&nbsp;
                                        <a class="btn-change-password" user-id="@item.Id" href="javascript:return false;">Change Password</a>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>

            </div>
            <div class="modal fade" id="EditUser" user-id="0" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit User</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group row">
                                <div class="col-12">
                                    <label for="UserId" class="col-form-label">UserId</label>
                                    <input type="text" class="form-control" id="editUserId" disabled readonly>
                                </div>
                                <div class="col-12">
                                    <label for="UserName" class="col-form-label">Username</label>
                                    <input id="editUsername" type="text" class="form-control" disabled readonly>
                                </div>
                                <div class="col-6">
                                    <label for="Role" class="col-form-label">Role</label>
                                    <select class="form-control" id="editRole">
                                    </select>
                                </div>
                                <div class="col-6">
                                    <label for="MerchantId" class="col-form-label">MerchantId</label>
                                    <select class="form-control" id="editMerchantId">
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="btnUpdateUser">Update</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="changePassword" user-id="0" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Change Password for User</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group row">
                                <div class="col-12">
                                    <label for="UserId" class="col-form-label">Email</label>
                                    <input type="text" class="form-control" id="changePasswordEmail" disabled readonly>
                                </div>
                                <div class="col-12">
                                    <label for="UserName" class="col-form-label">Your password</label>
                                    <input id="changePasswordOldPassword" type="password" class="form-control">
                                </div>
                                <div class="col-12">
                                    <label for="Role" class="col-form-label">New password</label>
                                    <input id="changePasswordNewPassword" type="password" class="form-control">

                                </div>
                                <div class="col-12">
                                    <label for="MerchantId" class="col-form-label">Confirm new password</label>
                                    <input id="changePasswordConfirmNewPassword" type="password" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="btnUpdateUserPssword">Update</button>
                        </div>
                    </div>
                </div>
            </div>


            <div class="modal fade" id="AddUser" user-id="0" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Add User</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-group row">
                                <div class="col-12">
                                    <label for="UserId" class="col-form-label">Email</label>
                                    <input type="email" class="form-control" id="addEmail">
                                </div>
                                <div class="col-12">
                                    <label for="Passowrd" class="col-form-label">Password</label>
                                    <input type="text" class="form-control" id="addPassword" value="Password!234##" disabled readonly>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" id="btnAddUser">Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>
        var table = null;
        toastr.options.fadeOut = 3000;

        $(document).ready(function () {
            $("#user-search-btn").on("click", function () {
                var execludedList = [];
                var value = $("#user-search-input").val().toLowerCase();
                if (value == "") {
                    $(".users-table-card").children().each(function () {
                        $(this).show();
                    })
                    return false;
                }
                $(".card-table-tamplate").find(".user-email").filter(function () {
                    var textToFilter = $(this).text() /*+ " " + $(this).siblings().eq(1).text()*/ /*+ " " + $(this).siblings().eq(1).text()*/;
                    if (textToFilter.toLowerCase().indexOf(value) == -1) {
                        $(this).parent().parent().parent().hide();
                    }
                    else {
                        $(this).parent().parent().parent().show();
                    }
                });
            });

            $("#user-search-input").on("search", function () {
                var execludedList = [];
                var value = $("#user-search-input").val().toLowerCase();
                if (value == "") {
                    $(".users-table-card").children().each(function () {
                        $(this).show();
                    })
                    return false;
                }
                $(".card-table-tamplate").find(".user-email").filter(function () {
                    var textToFilter = $(this).text() /*+ " " + $(this).siblings().eq(1).text()*/ /*+ " " + $(this).siblings().eq(1).text()*/;
                    if (textToFilter.toLowerCase().indexOf(value) == -1) {
                        $(this).parent().parent().parent().hide();
                    }
                    else {
                        $(this).parent().parent().parent().show();
                    }
                });
            });



            $('#dtUsers').DataTable({ "iDisplayLength": 25 });
            $(".btn-edit").click(function () {
                var userId = $(this).attr("user-id");
                $("#editUserId").val(userId);
                $("#EditUser").attr("user-id", userId);
                GetRoleList();
                GetMerchantList();
                var user = GetUser(userId);
                console.log(user);
                if (user != null) {

                    $("#editUsername").val(user.userName);
                    $("#editRole").val(user.roleId);
                    $("#editMerchantId").val(user.merchantId);
                    $("#EditUser").modal("show");
                }
            });

            $(".btn-change-password").click(function () {
                var userId = $(this).attr("user-id");
                var user = GetUser(userId);
                console.log(user);
                if (user != null) {
                    $("#changePasswordEmail").val(user.userName);
                    $("#changePassword").modal("show");
                }
            });


            $("#btnUpdateUser").click(function () {
                UpdateUser($("#editUserId").val());

            });
            $("#btnUpdateUserPssword").click(function () {
                btnUpdateUserPssword($("#changePasswordEmail").val());

            });
            $("#btnAddUserModal").click(function () {
                console.log("LALAAAAAAAAAAAAAA");
                $("#addEmail").val("");
                $("#AddUser").modal("show");
            });
            $("#btnAddUser").click(function () {
                AddUser($("#addEmail").val(), $("#addPassword").val());
            }
            );

        });

        function GetRoleList() {
            $.ajax({
                type: "GET",
                async: false,
                dataType: 'json',
                url: '/App/Users/GetRoleList',
                success: function (response) {
                    var options = "<option value=''>Choose Role</option>";
                    $("#editRole").html();
                    if (response.successful) {
                        if (response.data != null) {
                            $(response.data).each(function (index, item) {
                                options += "<option value=" + item.id + ">" + item.name + "</option>";
                            });
                            $("#editRole").html(options);
                        }
                    } else
                        toastr.error(response.message);
                },
                error: function (error) {
                    toastr.error(error);
                }
            });
        }

        function GetMerchantList() {
            $.ajax({
                type: "GET",
                async: false,
                dataType: 'json',
                url: '/App/Users/GetMerchantList',
                success: function (response) {
                    var options = "<option value=''>Choose Merchant</option>";
                    $("#editMerchantId").html();
                    if (response.successful) {
                        if (response.data != null) {
                            $(response.data).each(function (index, item) {
                                options += "<option value=" + item.id + ">" + item.code + "</option>";
                            });
                            $("#editMerchantId").html(options);
                        }
                    } else
                        toastr.error(response.message);
                },
                error: function (error) {
                    toastr.error(error);
                }
            });
        }

        function GetUser(userId) {
            var user = null;
            $.ajax({
                type: "GET",
                async: false,
                dataType: 'json',
                url: '/App/Users/GetUser/' + userId,
                success: function (response) {
                    if (response.successful) {
                        if (response.data != null) {

                            user = response.data;
                        }
                        else {
                            toastr.error("Invalid UserId");
                        }
                    } else
                        toastr.error(response.message);
                },
                error: function (error) {
                    toastr.error(error);
                }
            });
            return user;
        }

        function UpdateUser(userId) {
            var merchantId = $("#editMerchantId").val();
            var roleId = $("#editRole").val();
            if (roleId == "") {
                toastr.error("Please Choose Role");
                $("#editRole").focus();
                return;
            }
            if (merchantId == "") {
                toastr.error("Please Choose Merchant");
                $("#editMerchantId").focus();
                return;
            }
            $.ajax({
                type: "POST",
                dataType: 'json',
                data: {
                    UserId: userId, MerchantId: merchantId, RoleId: roleId
                },
                url: '/App/Users/UpdateUser',
                success: function (response) {
                    if (response.successful) {
                        toastr.success(response.message);
                        $("#EditUser").modal("hide");
                        location.reload();
                    }
                    else {
                        toastr.error(response.message);
                    }
                },
                error: function (error) {
                    toastr.error(error);
                }
            });
        }


        function btnUpdateUserPssword(emailId) {
            var password = $("#changePasswordOldPassword").val();
            var newPassword = $("#changePasswordNewPassword").val();
            var confirmNewPassword = $("#changePasswordConfirmNewPassword").val();
            $.ajax({
                type: "POST",
                dataType: 'json',
                data: {
                    Email: emailId, AdminPassword: password, NewPassword: newPassword, ConfirmPassword: confirmNewPassword
                },
                url: '/App/Users/UpdateUserPassword',
                success: function (response) {
                    if (response.successful) {
                        toastr.success(response.message);
                        $("#changePassword").modal("hide");
                    }
                    else {
                        toastr.error(response.message);
                    }
                },
                error: function (error) {
                    toastr.error(error);
                }
            });
        }

        function AddUser(email, password) {
            if (email == "") {
                toastr.error("Please enter email");
                $("#addEmail").focus();
                return;
            }
            if (password == "") {
                toastr.error("Please enter password");
                $("#addPassword").focus();
                return;
            }
            $.ajax({
                type: "POST",
                dataType: 'json',
                async: false,
                data: {
                    Email: email, Password: password
                },
                url: '/App/Users/AddUser',
                success: function (response) {
                    if (response.successful) {
                        toastr.success(response.message);
                        $("#AddUser").modal("hide");
                        location.reload();
                    }
                    else {
                        toastr.error(response.message);
                    }

                },
                error: function (error) {
                    toastr.error(error);
                }
            });
        }
    </script>
}



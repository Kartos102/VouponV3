
@{ Layout = "~/Views/Shared/_Layout.cshtml"; }
<html>

<body>
    <h1>Azure SignalR Serverless Sample</h1><br />
    <div id="messages"></div>
    <div class="container">
        <div class="row">&nbsp;</div>
        <!--<div class="row">
            <div class="col-2">Sender</div>
            <div class="col-4"><input type="text" id="senderInput" /></div>
        </div>-->
        <div class="row">
            <div class="col-2">Receiver</div>
            <div class="col-4"><input type="text" id="receiverInput" /></div>
        </div>
        <div class="row">
            <div class="col-2">Message</div>
            <div class="col-4"><input type="text" id="messageInput" /></div>
        </div>
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-6">
                <input type="button" id="sendButton" value="Send Message" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
    @section scripts{

        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0-rc.1.21452.15/signalr.min.js"></script>
        <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    }
    <script>
    function initialize() {
        axios.get('http://localhost:7071' + "/api/negotiate", {
            headers: { 'x-ms-client-principal-id': "@ViewData["AccountEmail"]" + "_v"/*, 'Authorization': vodusRewardReadCookie("Vodus.Token")*/ }
        }).then(response => {
            const options = {
                accessTokenFactory: () => response.data.accessToken
            }
           const connection = new signalR.HubConnectionBuilder()
                .withUrl(response.data.url, options)
                .build(signalR.HttpTransportType.None)

            connection.on('newMessage', (message) => {
                console.log(message);
                document.getElementById("messages").innerHTML = document.getElementById("messages").innerHTML + "<br/>" + message.Sender + ": " + message.Text;
            });
            connection.onclose(() => console.log('disconnected'));
            console.log('connecting...');

            connection.start({ withCredentials: true })
                .then(() => console.log('ready...'))
                .catch(console.error);
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            axios.post('http://localhost:7071' + "/api/SendMessage", {
                Message: {
                    Sender: "@ViewData["AccountEmail"]",
                    Text: document.getElementById("messageInput").value
                } , UserId: document.getElementById("receiverInput").value
            });
        });
    }

        $(document).ready(function () {
            initialize();

        });


    </script>
    <script></script>
</body>

</html>

